# This workflow configuration is used
# to automate building a public docker image of redstone-node
# and publishing it to the AWS ECR Public

# Learn more: https://github.com/pahud/ecr-public-action

name: Deploy docker images to AWS ECR Public
on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - packages/oracle-node/**
      - packages/cache-service/**
      - .github/workflows/oracle-tests.yaml
      - .github/workflows/deploy-to-ecr-public.yaml

jobs:
  deploy:
    runs-on: ubuntu-latest
    name: ECR public action
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Build and Push Docker images to ECR public
        id: build-and-push
        run: |
          # Build images (for node and cache-service)
          ORACLE_NODE_DOCKER_NAME=public.ecr.aws/y7v2w8b2/redstone-oracle-node
          CACHE_SERVICE_DOCKER_NAME=public.ecr.aws/y7v2w8b2/redstone-cache-service
          TAG=$(echo ${GITHUB_SHA} | cut -c1-7)
          docker build -t "redstone-monorepo:$TAG" .
          docker build -t "$ORACLE_NODE_DOCKER_NAME:$TAG" \
            -f packages/oracle-node/Dockerfile \
            --build-arg VERSION=$TAG .
          docker build -t "$CACHE_SERVICE_DOCKER_NAME:$TAG" \
            -f packages/cache-service/Dockerfile \
            --build-arg VERSION=$TAG .

          # Push images to ECR Public
          aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws
          docker push $ORACLE_NODE_DOCKER_NAME:$TAG
          docker push $CACHE_SERVICE_DOCKER_NAME:$TAG
