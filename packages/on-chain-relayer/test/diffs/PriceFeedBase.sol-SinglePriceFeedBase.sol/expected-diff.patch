4a5
> import {SafeCast} from "@openzeppelin/contracts/utils/math/SafeCast.sol";
6a8
> import {SinglePriceFeedAdapterBase} from "./SinglePriceFeedAdapterBase.sol";
20c22
< abstract contract PriceFeedBase is IPriceFeed, Initializable {
---
> abstract contract SinglePriceFeedBase is IPriceFeed, Initializable {
37c39,41
<   function getDataFeedId() public view virtual returns (bytes32);
---
>   function getDataFeedId() public view virtual returns (bytes32) {
>     return getPriceFeedAdapter().getSingleDataFeedId();
>   }
43c47
<   function getPriceFeedAdapter() public view virtual returns (IRedstoneAdapter);
---
>   function getPriceFeedAdapter() public view virtual returns (SinglePriceFeedAdapterBase);
51,52c55,56
<   function decimals() public virtual pure override returns (uint8) {
<     return 8;
---
>   function decimals() public virtual view override returns (uint8) {
>     return getPriceFeedAdapter().decimals();
61c65
<     return "Redstone Price Feed";
---
>     return getPriceFeedAdapter().description();
70,71c74,75
<   function version() public virtual pure override returns (uint256) {
<     return 1;
---
>   function version() public virtual view override returns (uint256) {
>     return getPriceFeedAdapter().version();
132c136,139
<   function latestRound() public view virtual returns (uint80);
---
>   function latestRound() public view returns (uint80) {
>     uint256 latestRoundUint256 = getPriceFeedAdapter().getLatestRoundId();
>     return SafeCast.toUint80(latestRoundUint256);
>   }
